{"componentChunkName":"component---src-templates-markdown-js","path":"/operators/continuous-deployment/docs/manage_your_app_secrets.md","result":{"data":{"site":{"siteMetadata":{"title":"Operate First"}},"markdownRemark":{"id":"9db3ab46-1c2b-5900-ae47-cda8d67439d4","html":"<h1>Secret Management</h1>\n<p>Secret management is handled using the KSOPs plugin. Use <a href=\"https://github.com/mozilla/sops\">sops</a> to encrypt your secrets in vcs.</p>\n<h2>Overview: KSOPs</h2>\n<p><code class=\"language-text\">KSOPS</code>, or kustomize-SOPS, is a <a href=\"https://github.com/kubernetes-sigs/kustomize/\">kustomize</a> plugin for SOPS encrypted resources. <code class=\"language-text\">KSOPS</code> can be used to decrypt any Kubernetes resource, but is most commonly used to decrypt encrypted Kubernetes Secrets and ConfigMaps. As a <a href=\"https://github.com/kubernetes-sigs/kustomize/\">kustomize</a> plugin, <code class=\"language-text\">KSOPS</code> allows you to manage, build, and apply encrypted manifests the same way you manage the rest of your Kubernetes manifests.</p>\n<h2>Requirements</h2>\n<ul class=\"pf-c-list\">\n<li><a href=\"https://github.com/golang/go\">Go</a></li>\n<li><a href=\"https://github.com/kubernetes-sigs/kustomize/\">kustomize</a> built with Go (See <a href=\"#kustomize-go-plugin-caveats\">details below</a>)</li>\n<li><a href=\"https://github.com/mozilla/sops\">SOPS</a></li>\n<li>gpg</li>\n</ul>\n<p>See <a href=\"versions.md\">versions</a> to download the appropriate version of SOPS, Kustomize, and KSOPS.</p>\n<h3>0. Verify Requirements</h3>\n<p>Before continuing, verify your installation of <a href=\"https://github.com/golang/go\">Go</a>, <a href=\"https://github.com/mozilla/sops\">SOPS</a>, and <code class=\"language-text\">gpg</code>. Below are a few non-comprehensive commands to quickly check your installations:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Verify that the latest version of Go is installed i.e. v1.13 and above</span>\ngo version\n\n<span class=\"token comment\"># Verify that your $GOPATH is set</span>\ngo <span class=\"token function\">env</span>\n\n<span class=\"token comment\"># Verify SOPS is installed</span>\nsops --version\n\n<span class=\"token comment\"># Verify gpg is installed</span>\ngpg --help</code></pre></div>\n<h3>1. Download KSOPS</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># export GO111MODULE=on</span>\ngo get -u github.com/viaduct-ai/kustomize-sops\n<span class=\"token comment\"># cd into the root directory</span>\n<span class=\"token builtin class-name\">cd</span> <span class=\"token variable\">$GOPATH</span>/src/github.com/viaduct-ai/kustomize-sops</code></pre></div>\n<h3>2. Install (or Reinstall) the Latest kustomize via Go</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># KSOPS is built with latest kustomize</span>\n<span class=\"token comment\"># If you want to change versions, update the installation script with your desired version and make sure to check that the KSOPS tests still pass</span>\n<span class=\"token comment\"># If you want to change versions below kustomize v3.3.0, use the KSOPS v1.0 or go-1.12 release!</span>\n<span class=\"token function\">make</span> kustomize</code></pre></div>\n<h3>3. Setup kustomize Plugin Path</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Don't forget to define XDG_CONFIG_HOME in your .bashrc/.zshrc</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"export XDG_CONFIG_HOME=\\<span class=\"token environment constant\">$HOME</span>/.config\"</span> <span class=\"token operator\">>></span> <span class=\"token environment constant\">$HOME</span>/.bashrc\n<span class=\"token builtin class-name\">source</span> <span class=\"token environment constant\">$HOME</span>/.bashrc</code></pre></div>\n<h3>4. Build and Install KSOPS Plugin</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">make</span> <span class=\"token function\">install</span></code></pre></div>\n<h3>5. Configure SOPS via .sops.yaml</h3>\n<p><code class=\"language-text\">KSOPS</code> relies on the <code class=\"language-text\">SOPS</code> creation rules defined in <code class=\"language-text\">.sops.yaml</code>. To make encrypted secrets more readable, we suggest using the following encryption regex to only encrypt <code class=\"language-text\">data</code> and <code class=\"language-text\">stringData</code> values. This leaves non-sensitive fields, like the secretâ€™s name, unencrypted and human readable.</p>\n<p>You will have to modify <code class=\"language-text\">.sops.yaml</code> if you want to use your key management service by providing the correct gpg fingerprint. You can customize this file according to the type of secrets you want to encrypt.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">creation_rules</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">encrypted_regex</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'^(data|stringData)$'</span>\n    <span class=\"token comment\"># Specify kms/pgp/etc encryption key</span>\n    <span class=\"token key atrule\">pgp</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'&lt;gpg-fingerprint>'</span>\n\n    <span class=\"token comment\"># Alternatively, you can specify multiple keys by doing the following</span>\n\n    <span class=\"token key atrule\">pgp</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">></span><span class=\"token punctuation\">-</span>\n      &lt;key_fingerprint_1<span class=\"token punctuation\">></span><span class=\"token punctuation\">,</span>\n      &lt;key_fingerprint_2<span class=\"token punctuation\">></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">...</span><span class=\"token punctuation\">...</span>\n      &lt;key_fingerprint_n<span class=\"token punctuation\">></span>\n    <span class=\"token comment\"># Optionally you can configure to use a providers key store</span>\n    <span class=\"token comment\"># kms: XXXXXX</span>\n    <span class=\"token comment\"># gcp_kms: XXXXXX</span></code></pre></div>\n<h4>Multiple keys</h4>\n<p>If you want ArgoCD to use multiple keys, you will need to modify the <code class=\"language-text\">data</code> field in\n<code class=\"language-text\">manifests/overlays/&lt;environment&gt;/secrets/gpg/secret.enc.yaml</code> to include the extra key.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">private.key</span><span class=\"token punctuation\">:</span> &lt;sops_encrypted_key<span class=\"token punctuation\">></span>\n  <span class=\"token key atrule\">extra.key</span><span class=\"token punctuation\">:</span> &lt;sops_encrypted_key<span class=\"token punctuation\">></span>\n  <span class=\"token punctuation\">...</span><span class=\"token punctuation\">...</span></code></pre></div>\n<h3>6. Create a Resource</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Create a local Kubernetes Secret</span>\n<span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">></span> secret.yaml</span>\napiVersion: v1\nkind: Secret\nmetadata:\n  name: mysecret\ntype: Opaque\ndata:\n  username: YWRtaW4=\n  password: MWYyZDFlMmU2N2Rm\nEOF</span></code></pre></div>\n<h3>7. Encrypt the Resource</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Encrypt with SOPS CLI</span>\n<span class=\"token comment\"># Specify SOPS configuration in .sops.yaml</span>\nsops -e secret.yaml <span class=\"token operator\">></span> secret.enc.yaml</code></pre></div>\n<h3>8. Define KSOPS kustomize Generator</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Create a local Kubernetes Secret</span>\n<span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">></span> secret-generator.yaml</span>\napiVersion: viaduct.ai/v1\nkind: ksops\nmetadata:\n  # Specify a name\n  name: example-secret-generator\nfiles:\n  - ./secret.enc.yaml\nEOF</span></code></pre></div>\n<h3>9. Create the kustomization.yaml</h3>\n<p><a href=\"https://github.com/kubernetes-sigs/kustomize/blob/master/docs/plugins/README.md\">Read about kustomize plugins</a></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">></span> kustomization.yaml</span>\ngenerators:\n  - ./secret-generator.yaml\nEOF</span></code></pre></div>","frontmatter":{"title":"","description":null}}},"pageContext":{"id":"9db3ab46-1c2b-5900-ae47-cda8d67439d4"}},"staticQueryHashes":["117426894","3000541721"]}